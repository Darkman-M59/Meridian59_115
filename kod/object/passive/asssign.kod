% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
AssassinSign is PassiveObject

constants:

   include blakston.khd
   include protocol.khd

resources:

   AssassinSign_name_rsc = "Der Zirkel der Meuchelmörder"
   Assassinsign_icon_rsc = newbsign.bgf
   
   asssign_insession = "Ein Zirkel der Meuchelmörder veranstaltet gerade ein Treffen. Bisher leben noch %i Kämpfer.\n\n%s"

   asssign_accepting = "Der nächste Zirkel wird schon bald beginnen. Momentan akzeptiere ich noch angehende Meuchelmörder.\n\n%s"

   asssign_not_accepting = "Es wird noch etwas dauern, bis ein neuer Meuchelmörder-Zirkel beginnt.\n\n%s"
   asssign_lastwinner = ""
   asssign_darkblade = "Amtierender Champion: %q \nDunkelste Klinge mit %i Toten: %q\n"
   asssign_darkblades = "Amtierender Champion: %q \nDunkelste Klinge mit %i Toten: \n"
   asssign_darkblade_format = "%q\n%s"
   asssign_last_darkblade_format = "%q\n"
   asssign_blank_winner = "Mocker"

   asssign_noone = ""

classvars:

	vrName = Assassinsign_name_rsc
    vrIcon = Assassinsign_icon_rsc
   
properties:

   
messages:

   ReqNewOwner(what = $)
   {
      return False;
   }

   ShowDesc()
   {
	local oGame, bInSession, bAccepting, oWinner, lDarkblade, i, count;

	oGame = send(SYS,@getAssassinGame);
	bInSession = send(oGame,@InSession);
	bAccepting = send(oGame,@InAcceptMode);
    
	%% tell if a match is underway and, if so, how many people are left.
	
	if bInSession
	{
		addpacket(4,asssign_insession,4,send(oGame,@GetNumCombatants));
	}
	else
	{
		if bAccepting
		{
			addpacket(4,asssign_accepting);
		}
		else		
		{
			addpacket(4,asssign_not_accepting);
		}
	}	
	
	%% tell who won the last match.
        oWinner = send(oGame,@getLastWinner);
        lDarkBlade = send(oGame,@getMostKills);

	if lDarkBlade <> $
	{
	    count = length(lDarkBlade);
	    if count = 1
	    {
		AddPacket(4,asssign_darkblade);

                if oWinner <> $
                {
                Addpacket(STRING_RESOURCE,send(oWinner,@gettruename));
                }
                else
                {
                addpacket(4,asssign_blank_winner);
                }

		Addpacket(4,send(oGame,@getNumKills));
		AddPacket(STRING_RESOURCE,send(first(lDarkBlade),@gettruename));
	    }
	    else
	    {
		AddPacket(4,asssign_darkblades);

                if oWinner <> $
                {
                Addpacket(STRING_RESOURCE,send(oWinner,@gettruename));
                }
                else
                {
                addpacket(4,asssign_blank_winner);
                }

	 	Addpacket(4,send(oGame,@getNumKills));
		for i in lDarkBlade
		{
		  if count > 1
		     {
		     AddPacket(4,asssign_darkblade_format);
		     AddPacket(STRING_RESOURCE,send(i,@gettruename));
		     }
		  else
		     {
		     AddPacket(4,asssign_last_darkblade_format);
		     AddPacket(STRING_RESOURCE,send(i,@gettruename));
	             }
		  count = count -1;
	        }
	    }

	}	
	else
	{
		AddPacket(4,asssign_noone);
	}
	return;		
   }
end



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

