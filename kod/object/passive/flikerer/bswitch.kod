% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
BrazierSwitch is Flickerer

constants:

   include blakston.khd

   USE_RANGE = 3
   
resources:

   brazierswitch_name_rsc = "Das Feuer"
   brazierswitch_icon_rsc = brazier.bgf
   brazierswitch_desc_on = "Eine einladende Flamme erhellt mit ihrem Licht freundlich die Umgebung."

   brazierswitch_desc_off = "Das kalte, metallene Feuer strahlt kein Licht aus."

   brazierswitch_not_in_range = "Du bist dem Feuer nicht nahe genug, um es anzuzünden."

classvars:

   vrName = brazierswitch_name_rsc
   vrIcon = brazierswitch_icon_rsc

   viObject_flags = ACTIVATE_YES

properties:

   viStart_frame = 2
   viEnd_frame = 7

   % What intensity? from 0-255
   piLightIntensity = 100

messages:

   Constructor(has_flame = TRUE)
   {
      pbIsLit = has_flame;

      propagate;
   }

   SetAnimationSpeed()
   {
      % Set our animations a bit randomly.
      piAnim_speed = (random(9,15) * 10);
      viStart_frame = random(2,3);
      viEnd_frame = random(5,6);

      return;   
   }

   ShowDesc()
   {
      if pbIsLit
      {
         AddPacket(4,brazierswitch_desc_on);
      }
      else
      {
         AddPacket(4,brazierswitch_desc_off);
      }

      propagate;
   }

   TryActivate(who=$)
   "Return False only if you want user.kod to send its own error message to user."
   {
      if abs(send(who,@GetRow)-send(self,@GetRow)) > USE_RANGE
         OR abs(send(who,@GetCol)-send(self,@GetCol)) > USE_RANGE
      {
         Send(who,@MsgSendUser,#message_rsc=brazierswitch_not_in_range);          

         return TRUE;
      }                                                                     

      send(poOwner,@BrazierLit,#brazier_obj=self,#who=who);      

      return TRUE;
   }

   ReqNewOwner(what = $)
   {
      return FALSE;
   }

   SetFlame(has_flame = TRUE)
   {
      pbIsLit = has_flame;
      if pbIsLit
      {
         % randomize each time it comes on.
         send(self,@SetAnimationSpeed);
      }

      Send(poOwner,@SomethingChanged,#what=self);

      return;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

