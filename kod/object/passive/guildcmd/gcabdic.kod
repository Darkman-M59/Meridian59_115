% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
GuildAbdicate is GuildCommand

constants:

   include blakston.khd
   include protocol.khd

resources:

   GuildAbdicate_name_rsc = "Abdanken"
   GuildAbdicate_icon_rsc = light.bgf
   GuildAbdicate_desc_Rsc = "Das ist der einzige Weg, wie ein Gildenführer eine Gilde verlassen kann. Er muss einen Nachfolger wählen, wenn er abdankt."



   abdicate_non_user = "%s%s bedankt sich bei Dir, aber ist noch nicht bereit, Deine Gilde zu führen."

   abdicate_not_member = "%s%q ist kein Mitglied von %s%q!"

   abdicate_cant_self = "Du kannst Dich nicht selbst als Deinen eigenen Nachfolger wählen!"

   abdicate_to_chosen = "~B%s hat die Führungsposition der Gilde %s%q aufgegeben und Dir übertragen!"


   abdicate_to_abdicator = "~BDu überträgst %q, die Führungsposition in der Gilde: %s%q."

   abdicate_necro_nak = "~BDu hast einen Blutsschwur als Führer des Ordens geleistet. Du kannst nicht einfach abdanken!"



classvars:

   vrName = GuildAbdicate_name_rsc
   vrIcon = GuildAbdicate_icon_rsc
   vrDesc = GuildAbdicate_desc_rsc

   viIndefinite = ARTICLE_NONE
   viDefinite = ARTICLE_NONE

   viGuildcommand_num = GCID_ABDICATE
   viRank_needed = RANK_MASTER
   viNecro_enabled = FALSE

properties:

messages:

   GetNumSpellTargets()
   {
      return 1;
   }

   DoCommand(who=$, otarget = $)
   "Kicks the target out of the guild!"
   {
      local yourGuild, myguild, i, lmembers;

      if IsClass(Send(who,@GetGuild),&NecromancerGuild)
      {
          Send(who,@MsgSendUser,#message_rsc=abdicate_necro_nak);

          return FALSE;
      }

      if NOT isClass(oTarget,&Player)
      {
         Send(who,@MsgSendUser,#message_rsc=abdicate_non_user,
              #parm1=Send(oTarget,@GetCapDef),
              #parm2=Send(oTarget,@GetTrueName));

         return FALSE;
      }

      if oTarget = who
      {
         Send(who,@MsgSendUser,#message_rsc=abdicate_cant_self);

         return FALSE;
      }

      yourGuild= Send(oTarget,@GetGuild);
      myGuild = Send(who,@GetGuild);

      if yourGuild <> myGuild OR yourGuild = $
      {
          Send(who,@MsgSendUser,#message_rsc=abdicate_not_member,
              #parm1=Send(oTarget,@GetDef),#type1=STRING_RESOURCE,
			     #parm2=Send(oTarget,@GetName),#parm3=Send(myGuild,@GetDef),
              #parm4=Send(myGuild,@GetName));

          return FALSE;
      }

      Send(myGUild,@newguildmaster,#who=oTarget,#abdicate=TRUE);

      Send(oTarget,@MsgSendUser,#message_rsc=abdicate_to_chosen,
           #parm1=Send(who,@GetTrueName),#parm2=Send(myguild,@GetDef),
           #parm3=Send(myguild,@GetName));
      Send(who,@MsgSendUser,#message_rsc=abdicate_to_abdicator,
           #parm1=Send(oTarget,@GetTrueName),#type1=STRING_RESOURCE,
           #parm2=Send(myguild,@GetDef),#parm3=Send(myguild,@GetName));

      propagate;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

