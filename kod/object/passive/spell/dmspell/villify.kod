% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Villify is DMSpell

% (sic-- it's supposed to be 'vilify'.)

constants:
   include blakston.khd

resources:

   villify_name_rsc = "Verurteilen"
   villify_icon_rsc = light.bgf
   villify_desc_rsc = "Kennzeichnet jemanden als Ausgestoßenen oder Mörder."

   villify_msg_DM = "Du verurteilst %s%."
   villify_msg_target = "%s%s ist bereits ein Mörder."
   villify_failed = "%s%s ist schon als Ausgestoßener oder Mörder bekannt."
   villify_unworthy = "Du bist nicht würdig genug, um solch einen mächtigen Zauber zu sprechen."

classvars:

   vrName = villify_name_rsc
   vrIcon = villify_icon_rsc
   vrDesc = villify_desc_rsc

   viSpell_num = SID_VILLIFY
   viSchool = SS_DM_COMMAND

properties:

messages:

   GetNumSpellTargets()
   {
      return 1;
   }

   SuccessChance(who=$)
   "If they are not a creator, then they do not get this spell off."
   {
      if send(who,@PlayerIsImmortal,#gn=TRUE) <> 2 AND NOT isclass(who,&Creator)
      {
         send(who,@MsgSendUser,#message_rsc=villify_unworthy);
         send(who,@RemoveSpell,#num=viSpell_num);
         send(who,@ToCliStats,#group=3);
         
         return FALSE;
      }
      
      return TRUE;
   }

   CanPayCosts(who = $, lTargets = $)
   {
      if not IsClass(First(lTargets),&User)
      {
         send(who,@MsgSendUser,#message_rsc=villify_failed,
              #parm1=Send(First(lTargets),@GetDef),#parm2=Send(First(lTargets),@GetTrueName));
              
         return FALSE;
      }
      
      propagate;
   }

   CastSpell(who = $, lTargets = $)
   {
      local i;

      for i in lTargets
      {
         % already a murderer
         if send(i,@checkplayerflag,#flag=PFLAG_MURDERER)
         {
            send(who,@MsgSendUser,#message_rsc=villify_failed,
	              #parm1=Send(i,@GetDef),#parm2=Send(i,@GetTrueName));
	         
            continue;
         }

         % from outlaw to murderer
         if send(i,@checkplayerflag,#flag=PFLAG_OUTLAW)
         {
            send(who,@MsgSendUser,#message_rsc=villify_msg_DM,#parm1=Send(i,@GetTrueName));
            send(i,@MsgSendUser,#message_rsc=villify_msg_target,#parm1=Send(who,@GetTrueName));
            send(i,@SetPlayerFlag,#flag=PFLAG_OUTLAW,#value=False);
            send(i,@SetPlayerFlag,#flag=PFLAG_MURDERER,#value=True);
            post(i,@EvaluatePKStatus);
            
            continue;
         }

         % from lawful to outlaw
         send(who,@MsgSendUser,#message_rsc=villify_msg_DM,#parm1=Send(i,@GetTrueName));		
         send(i,@MsgSendUser,#message_rsc=villify_msg_target,#parm1=Send(who,@GetTrueName));
         send(i,@SetPlayerFlag,#flag=PFLAG_OUTLAW,#value=True);
         send(i,@SetPlayerFlag,#flag=PFLAG_MURDERER,#value=False);
         post(i,@EvaluatePKStatus);
      }

      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

