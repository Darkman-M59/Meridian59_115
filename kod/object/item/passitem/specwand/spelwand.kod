% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
SpellWand is SpecialWand

constants:

   include blakston.khd

resources:

   SpellWand_name_rsc = "Zauberstab"
   SpellWand_label_name_rsc = "Allgemeiner Zauberstab"
   SpellWand_icon_rsc = wand6.bgf
   SpellWand_desc_rsc = "Magische Energien umströmen diesen dünnen Stab."
   SpellWand_broken = "%s%s zerbricht in Stücke!"
   SpellWand_useless = "Der Stab hat seine magische Energie verbraucht und ist jetzt verkohlt und nutzlos."
   SpellWand_desc_broken_rsc = "Dieser einst so prächtige Stab ist jetzt nur noch ein wertloses Stück Holz."

   SpellWand_target_gone = "Du zielst mit Deinem Zauberstab sorgfältig auf %s%s, aber plötzlich merkst Du, dass Dein Ziel verschwunden ist."
   SpellWand_fails = "Du richtest den Zauberstab auf %s%s, aber nichts passiert."

classvars:

   vrLabelName = SpellWand_label_name_rsc
   vrIcon = SpellWand_icon_rsc
   viSpellEffect = SID_FIREBALL
   viColor = XLAT_TO_RED

   viHits_init_min = 4
   viHits_init_max = 9

   viGround_group = 2
   viInventory_group = 1

properties:

   vrName = SpellWand_name_rsc
   vrDesc = SpellWand_desc_rsc

messages:

   Constructor(labelled=false,model=$)
   {
      local oItemAtt;

      if model <> $ and GetClass(model) <> GetClass(self) { model = $; }

      if labelled or (model <> $ and send(model,@IsLabelled))
      {
         vrName = vrLabelName;
      }

      piItem_flags = send(SYS,@EncodeTwoColorXLAT,#color1=viColor);

      propagate;
   }

   IsLabelled()
   {
      if vrName = vrLabelName { return true; }
      return false;
   }

   ReqNewApply(what = $,apply_on = $)
   {
      %if what = apply_on { return FALSE; }
      return TRUE;
   }
   
   CastSpell(what = $, apply_on = $)
   "Override this to make the wand do something."
   {
      local oSpell,iSpellPower;
      oSpell = Send(SYS,@FindSpellByNum,#num=viSpellEffect);

      if IsClass(apply_on,&Battler) and (not IsClass(apply_on,&User)) and (not send(apply_on,@CanMonsterFight,#who=poOwner,#oStroke=self))
      {
         return;
      }
      
      iSpellPower = random(25,75);
      if (send(oSpell,@CanPayCosts,#who=poOwner,#lTargets=[apply_on],#iSpellPower=iSpellPower,#bItemCast=TRUE))
         and (send(send(what,@GetOwner),@ReqSomethingAttack,#what=what,#victim=apply_on))
      {
         send(oSpell,@CastSpell,#who=poOwner,#lTargets=[apply_on],#iSpellPower=iSpellPower,#bItemCast=TRUE);
      } else {
	      Send(what, @MsgSendUser, #message_rsc=Spellwand_fails, #parm1=Send(apply_on,@GetDef),#parm2=Send(apply_on,@GetName));
      }
      
      return;
   }

   CanIdentify()
   {
      return TRUE;
   }

   RevealHiddenAttributes()
   {
      if vrName <> vrLabelName
      {
         vrName = vrLabelName;
         return TRUE;
      }
      return FALSE;
   }

   GetTrueName()
   {
      return vrLabelName;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

