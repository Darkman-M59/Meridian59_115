% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Gauntlet is AttackModifier

constants:

   include blakston.khd

resources:

  
   gauntlet_name_rsc = "Das Paar Panzerhandschuhe"
   gauntlet_icon_rsc = gauntlet.bgf
   gauntlet_desc_rsc = "Diese polierten Panzerhandschuhe bieten Schutz für Hände und Unterarme. Sie verleihen Deinem Schlag mehr Genauigkeit und Wucht."




   gauntlet_condition_exc = " leuchtet im Schimmer der Vollkommenheit."
   gauntlet_condition_exc_mended = " ist in hevorragendem Zustand, wurde aber bereits ausgebessert."
   gauntlet_condition_good = " sind angeschlagen, doch immer noch brauchbar."
   gauntlet_condition_med = " sind ziemlich verbeult."
   gauntlet_condition_poor = " sind in Gefahr, auseinanderzufallen. Große Metallstücke sind während des Kampfes herausgerissen worden."
   gauntlet_condition_broken = " sind kaputt und haben keinen Nutzen mehr."
   gauntlet_broken = "Die Panzerhandschuhe bestehen nur noch aus unbrauchbarem Metall."

   standardshirt_rightarm_gauntlet_male = bre.bgf
   standardshirt_rightarm_gauntlet_female = brf.bgf
   standardshirt_leftarm_gauntlet_male = ble.bgf
   standardshirt_leftarm_gauntlet_female = blf.bgf

   barearm_rightarm_gauntlet_male = bri.bgf
   barearm_rightarm_gauntlet_female = brj.bgf
   barearm_leftarm_gauntlet_male = bli.bgf
   barearm_leftarm_gauntlet_female = blj.bgf

classvars:

   vrName = gauntlet_name_rsc
   vrIcon = gauntlet_icon_rsc
   vrDesc = gauntlet_desc_rsc
   vrPoss_article = object_article_cap_these_rsc
   
   vrItem_broken = gauntlet_broken

   viUse_type = ITEM_USE_GAUNTLET
   viItem_type = ITEMTYPE_ARMOR
   viUse_amount = 1

   viHits_init_min = 300
   viHits_init_max = 450

   viValue_average = 400
   viBulk = 50
   viWeight = 50

   viGround_group = 1
   viInventory_group = 2
   viBroken_group = 3

   vbShow_condition = TRUE
   vrCondition_exc = gauntlet_condition_exc 
   vrCondition_exc_mended = gauntlet_condition_exc_mended 
   vrCondition_good = gauntlet_condition_good 
   vrCondition_med = gauntlet_condition_med 
   vrCondition_poor = gauntlet_condition_poor 
   vrCondition_broken = gauntlet_condition_broken

   viDefense_base = 15
   viAttack_base = 20
   viDamage_base = 1

properties:

   piDefense_bonus = 15
   piAttack_bonus = 20
   piDamage_bonus = 1

messages:

   NewUsed(what = $)
   {
      local i, oFound, iPriority;
      
      oFound=$;
      for i in send(what,@GetPlayerUsing)
      {
         iPriority = send(i,@ItemChangesArms);
         if iPriority <> 0
         {
            if oFound = $ 
            {
               oFound = i;
            }
            else
            {
               if iPriority > send(oFound,@ItemChangesArms)
               {
                  oFound = i;
               }
            }	    
         }	 
      }
      
      if oFound <> $
      {
         send(oFound,@DoPlayerArt); 
      }
      else
      {
         send(what,@ResetPlayerArms);
      }

      % We're also a defense modifier
      Send(what,@AddDefenseModifier,#what=self);
      
      propagate;
   }

   NewUnused(what = $)
   {
      local i, oFound, iPriority;
      
      oFound=$;
      for i in send(what,@GetPlayerUsing)
      {
         iPriority = send(i,@ItemChangesArms);
         if iPriority <> 0
         {
            if oFound <> $ 
            {
               if iPriority > send(oFound,@ItemChangesArms)
               {
                  oFound = i;
               }
            }
            else
            {
               oFound = i;
            }
         }	 
      }
      
      if oFound <> $
      {
         send(oFound,@DoPlayerArt); 
      }
      else
      {
         send(what,@ResetPlayerArms);
      }

      % We're also a defense modifier
      Send(what,@RemoveDefenseModifier,#what=self);

      propagate;
   }

   DefaultValues()
   {
      piDefense_bonus = viDefense_base;
      piAttack_bonus = viAttack_base;
      piDamage_bonus = viDamage_base;

      propagate;
   }

   OverrideArms()
   {
      return TRUE;
   }
   
   GetOverrideRightArm(who=$)
   {  
      local i, bFound;
      
      bFound = FALSE;
      for i in send(who,@GetPlayerUsing)
      {
         if isClass(i,&TankTop)
         {
            bFound = TRUE;
            
            break;
         }
      }
      
      if bFound
      {
         if send(who,@GetGender) = GENDER_MALE
         {
            return barearm_rightarm_gauntlet_male;
         }
      
         return barearm_rightarm_gauntlet_female;
      }      
      
      if send(who,@GetGender) = GENDER_MALE
      {
         return standardshirt_rightarm_gauntlet_male;
      }
      
      return standardshirt_rightarm_gauntlet_female;
   }

   GetOverrideLeftArm(who=$)
   {
      local i, bFound;

      bFound = FALSE;
      for i in send(who,@GetPlayerUsing)
      {
         if isClass(i,&TankTop)
         {
            bFound = TRUE;

            break;
         }
      }
      
      if bFound
      {
         if send(who,@GetGender) = GENDER_MALE
         {
            return barearm_leftarm_gauntlet_male;
         }
      
         return barearm_leftarm_gauntlet_female;
      }

      if send(who,@GetGender) = GENDER_MALE
      {
         return standardshirt_leftarm_gauntlet_male;
      }
      
      return standardshirt_leftarm_gauntlet_female;
   }

   % No alterations when we hit the target....
   WeaponHitTarget()
   {
      return;
   }

   ModifyHitRoll(who = $,what = $,hit_roll = $)
   {
      local oWeapon;

      oWeapon = Send(who,@GetWeapon);
      if (oWeapon = $)
         or (not IsClass(oWeapon,&RangedWeapon))
      {
         return hit_roll + piAttack_bonus;
      }

      return hit_roll;
   }
   
   ModifyDamage(who = $,what = $,damage = $)
   {
      local oWeapon;
      
      % Add damage to non-ranged weapons (and punch)
      oWeapon = Send(who,@GetWeapon);
      if oWeapon = $
         OR NOT IsClass(oWeapon,&RangedWeapon)
      {
         return damage + piDamage_bonus;
      }

      return damage;
   }

   ModifyDefensePower(defense_power=$)
   {
      return defense_power + piDefense_bonus;
   }

   ModifyDefenseDamage(who = $,what = $,damage = $)
   {
      return damage;
   }

   CanMend()
   { 
      local i, oItemAtt;
		
      for i in plItem_Attributes
      {
         oItemAtt = send(SYS,@FindItemAttByNum,
                         #num=send(self,@GetNumFromCompound,#compound=first(i)));
         if oItemAtt = $
         {
            DEBUG("Illegal ItemAtt in list!");
            
            continue;
         }
	 
         if NOT send(oItemAtt,@ItemCanMend,#oItem=self)
         {
            return FALSE;
         }   
      }
      
      return TRUE; 
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



