% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%code by Justin, 98jsh@williams.edu
 
BerserkerRing is Ring

constants:

   include blakston.khd

resources:

   berserkerring_name_rsc = "Der Berserker-Ring"
   berserkerring_icon_rsc = ring2.bgf
   berserkerring_desc_rsc = "Dieser Ring scheint ein warmes, rotes Licht auszustrahlen. Er trägt eine einfache Inschrift, \"Wollüstige Schläge sind stark, aber nicht immer richtig.\""



  
   berserkerring_use_rsc = "Die Lust nach Kampf steigt in Dir hoch. Du sehnst Dich danach, Deine Feinde niederzustrecken..."


   berserkerring_use_wav_rsc = bezerker_ring.wav

   berserkerring_unuse_rsc = "Die Kampfeslust des Berserker-Rings verlässt Dich."


   berserkerring_break_rsc = "Der Beserker-Ring verschwindet einfach, nachdem sein Kampfesdurst gestillt wurde."

      
classvars:

   vrRealName = berserkerring_name_rsc
   vrIcon = berserkerring_icon_rsc
   vrRealDesc = berserkerring_desc_rsc

   viHits_init_min = 80
   viHits_init_max = 120

   viBulk = 5
   viWeight = 10
   
   viValue_average = 200

properties:


messages:

   NewUsed(what = $)
   {
      local oRoom;

      if vrName = vrRealName
      {
         % Only give the message if it's identified.
         Send(poOwner,@MsgSendUser,#message_rsc=berserkerring_use_rsc);

         % Play sound
         oRoom = Send(poOwner, @GetOwner);
         Send(oRoom, @SomethingWaveRoom, #what = poOwner, 
              #wave_rsc = berserkerring_use_wav_rsc);
      }

      Send(what,@AddAttackModifier,#what=self);
            
      propagate;
   }

   NewUnused(what = $)
   {
      if vrName = vrRealName
      {
         % Only give the message if it's identified.
         Send(poOwner,@MsgSendUser,#message_rsc=berserkerring_unuse_rsc);
      }

      Send(what,@RemoveAttackModifier,#what=self);
      
      propagate;
   }

   ModifyHitRoll(who = $, what = $, hit_roll = $)
   {
      piHits = piHits - 1;
      if piHits <= 0
      {
         Send(poOwner,@MsgSendUser,#message_rsc=berserkerring_break_rsc); 
         Send(poOwner,@TryUnuseItem,#what=self);
         Send(self,@Delete);

         return hit_roll;
      }
      
      return hit_roll - (Random(15,25) * 10);
   }

   ModifyDamage(who = $, what = $, damage = $)
   {
      local oWeapon;

      oWeapon = send(who,@GetWeapon);

      if oWeapon = $ OR NOT IsClass(oWeapon,&RangedWeapon)
      {
         return damage + random(1,4);
      }

      return damage;
   }

   WeaponHitTarget()
   {
      return;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


