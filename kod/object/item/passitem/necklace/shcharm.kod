% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Damion Schubert, November 1996

ShalilleCharm is Necklace

constants:

   include blakston.khd

   INTELLECT_CHANGE = 5
   STAMINA_CHANGE = 2

resources:

   ShalilleCharm_name_rsc = "Das Diamantenhalsband"
   ShalilleCharm_icon_rsc = shcharm.bgf
   ShalilleCharm_desc_rsc = "Dieses Halsband, bestehend aus sorgsam geschliffenen Diamanten, eingebettet in kunstvoll gearbeitetes Kupfer, ist sehr kostbar."



   ShalilleCharm_whisper = "Eine Stimme flüstert, \"~I...Ruhe gewinnt nur die Oberhand, wenn sie aus ihren Qualen lernt...\""

classvars:

   vrName = ShalilleCharm_name_rsc
   vrIcon = ShalilleCharm_icon_rsc
   vrDesc = ShalilleCharm_desc_rsc

   viValue_average = 500

   viBulk = 20
   viWeight = 25
   viMax_Disp_hits = 5

   viGround_group = 2

properties:
   
   pbIn_use = False

   piIntellect_change = Intellect_CHANGE
   piStamina_change = Stamina_CHANGE

   piDisp_hits = 0

messages:

   Constructor()
   {
      piDisp_hits = viMax_disp_hits;
      propagate;
   }

   NewOwner()
   {
      piDisp_hits = viMax_disp_hits;
      propagate;
   }

   NewUsed(what = $)
   "When the charm is put on, the wearer gets a moderate bonus to both Intellect and Stamina."
   {
      piStamina_change = send(what,@addStamina,#points=Stamina_CHANGE);
      piIntellect_change = send(what,@addIntellect,#points = Intellect_CHANGE);

      if random(1,5) = 3   %% 20% chance
        {
          send(what,@msgsenduser,#message_rsc=ShalilleCharm_whisper);
        }
      propagate;
   }

   NewUnused(what = $)
   "When something that can break the curse unuses the item"
   {
      send(what,@addStamina,#points=-piStamina_change);
      send(what,@addIntellect,#points = -piIntellect_change);
      propagate;
   }

   DestroyDisposable()
   {
      if piDisp_Hits = 0
        {
           send(self,@delete);
           return;
        }
      piDisp_hits = piDisp_hits - 1;
      return;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




