% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
RoomKeyCopy is PassiveItem

constants:

   include blakston.khd

resources:

   RoomKeyCopy_name_rsc = "Ein silberner Zimmerschlüssel"
   RoomKeyCopy_icon_rsc = roomkeyc.bgf
   RoomKeyCopy_desc_rsc = "Dieser silberne Schlüssel trägt die Inschrift:\n"
   RoomKeyCopy_desc2_rsc = "s Zimmer in der "

   RoomKeyCopy_vanishes = "Dein silberner Zimmerschlüssel schmilzt zu einer seltsam silbrigen Flüssigkeit, und verdampft wenig später in einer blauen Dunstwolke."



   RoomKeyCopy_teleport = "Als Du den Schlüssel ins Schlüsselloch steckst, umgibt Dich ein helles weißes Licht und Du befindest Dich plötzlich woanders."



   RoomKeyCopy_no_use = "Es scheint nichts in der Nähe zu sein, um den Schlüssel zu benutzen."

   RoomKeyCopy_no_drop_room = "Du kannst Deinen Schlüssel hier nicht ablegen. "

   RoomKeyCopy_no_token = "Du kannst von deinem Artefakt nicht ablassen um deinen Schlüssel ins Schlüsselloch zu stecken."

classvars:

   vrName = RoomKeyCopy_name_rsc
   vrIcon = RoomKeyCopy_icon_rsc
   vrDesc = RoomKeyCopy_desc_rsc

   viItem_type = ITEMTYPE_SPECIAL

   viBulk = 10
   viWeight = 10
   viValue_average = 80

   viUse_type = ITEM_SINGLE_USE

properties:

   piRID = $

messages:

   Constructor(iRID=$)
   {
      if iRID = $
      {
         post(self,@Delete);

         return;
      }

      piRID = iRID;

      propagate;
   }

   CanBeGivenToNPC()
   {
      return FALSE;
   }

   GetRID()
   {
      return piRID;
   }

   OriginalDeleted()
   {
      if (poOwner <> $) and isClass(poOwner,&User)
      {
         if send(poOwner,@IsLoggedOn)
         {
            send(poOwner,@MsgSendUser,#message_rsc=RoomKeyCopy_vanishes);
         }
         else
         {
            if Send(poOwner,@GetSaveRoom) = piRID
            {
               Send(poOwner,@AdminGoToSafety);
            }
         }
      }
      
      send(self,@Delete);
      
      return;
   }

   DoBaseDesc()
   {
      local oRoom,rName,rLocation;

      oRoom = Send(SYS,@FindRoomByNum,#num=piRID);
      if (oRoom = $)
      {
         Send(self,@Delete);
         return;
      }

      rName = Send(Send(oRoom,@GetRenter),@GetName);
      rLocation = Send(oRoom,@GetLocationName);

      ClearTempString();
      AppendTempString(vrDesc);
      AppendTempString(rName);
      AppendTempString(RoomKeyCopy_desc2_rsc);
      AppendTempString(rLocation);

      return;
   }
   
   SendAnimation()
   {
      AddPacket(1,ANIMATE_NONE,2,2);

      return;
   }

   SendLookAnimation()
   {
      AddPacket(1,ANIMATE_NONE,2,2);

      return;
   }

   SendInventoryAnimation()
   {
      AddPacket(1,ANIMATE_NONE,2,1);

      return;
   }

   ReqNewApply()
   {
      return TRUE;
   }

   NewApplied(what = $,apply_on = $)
   {
      local oRoom, oInn;
      
      oRoom = Send(SYS,@FindRoomByNum,#num=piRID);
      oInn = Send(SYS,@FindRoomByNum,#num=send(oRoom,@GetLocation));

      if send(what,@GetOwner) = oInn
         AND send(oInn,@EnterRentableRoom,#who=what)
      {
         % Can't bring a token in; no one can follow you
         if Send(what, @PossessesA, #class = &Token) 
         {
            Send(what, @MsgSendUser, #message_rsc = RoomKeyCopy_no_token);
            return;
         }

         send(what,@MsgSendUser,#message_rsc=RoomKeyCopy_teleport);
         send(what,@EffectSendUserDuration,#effect=EFFECT_WHITEOUT,#duration=750);
         send(send(SYS,@FindRoomByNum,#num=piRID),@Enter,#who=what);
      }
      else
      {
         send(what,@MsgSendUser,#message_rsc=RoomKeyCopy_no_use);
      }

      return;
   }

   NoDropMessage()
   {
      if (poOwner <> $) AND IsClass(poOwner,&Player)
      {
         Send(poOwner,@MsgSendUser,#message_rsc=RoomKeyCopy_no_drop_room);
      }

      return;
   }

   ReqNewOwner(what=$)
   {
      % No dropping in rentable rooms to circumvent the room expiration code
      if what <> $ AND isClass(what,&RentableRoom)
      {
         send(self,@NoDropMessage);
           
         return FALSE;
      }

      propagate;
   }

   CanSwap()
   {
      return FALSE;
   }

   CanShatter()
   {
      return FALSE;
   }

   ReqDMDelete()
   "Keys are not deleted with the DM clear inventory command."
   {
      return FALSE;
   }
   
   CanBeStoredInVault()   
   {
      return FALSE;
   }

   DropOnDeath()
   {
      return FALSE;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

