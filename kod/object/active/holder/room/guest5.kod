% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Guest5 is Room

constants:

   include blakston.khd

resources:

   room_name_guest5 = "Das Haus von Roderic D'Stane"
   room_guest5 = guest5.roo
   guest5_music = login.mp3

   guest5_signname = "Kommunikation"
   guest5_sign = "Kommunikation ist ein wichtiger Bestandteil von Meridian, egal, welches Ziel Du auch verfolgst. Die gebräuchlichste Art der Kommunikation ist der Befehl SAGEN (Kürzel: s). Ein Beispiel: Wenn Du S HALLO eintippst, wird der Alte in dieser Hütte antworten.\n\nJeder andere Spieler, der sich im selben Kartengebiet wie Du aufhält, kann hören, was Du sagst. Allerdings sind die meisten Ladeninhaber und auch viele Alte quasi schwerhörig. Du musst also nahe an sie herantreten, damit sie Dich verstehen.\n\nEs gibt noch weitere Möglichkeiten, sich mitzuteilen. So wirst Du z. B. feststellen, dass andere Spieler Nachrichten von dem verbreiten, was im Rest der Welt vor sich geht. Auch Du besitzt diese Fähigkeit, und sie nennt sich MITTEILUNG (Kürzel: m) - schickst Du also ein \"M Seyd gegrüsst!\", so erfahren alle Spieler dieser Welt, die gerade online sind, Deine Grussbotschaft.\n--------------------------\nTippe S AUFTRAG, um zu sehen, was Du als nächstes tun sollst."
















classvars:

   vrName = room_name_guest5
   vrSign = guest5_sign

   viTeleport_row = 2
   viTeleport_col = 2

   viDemo_base = RID_GUEST_BASE

   viPermanent_flags = ROOM_NO_COMBAT | ROOM_GUEST_AREA
   viTerrain_type = TERRAIN_CITY | TERRAIN_RESIDENCE

properties:

   prRoom = room_guest5
   piRoom_num = RID_guest5

   piBaseLight = LIGHT_NICE
   piOutside_factor = OUTDOORS_SOME

   prMusic = guest5_music

messages:


   CreateStandardExits()
   {
      plExits = $;

      plExits = Cons([ 1, 2, viDemo_base + 2, 25, 52, ROTATE_NONE ],plExits);
      plExits = Cons([ 1, 3, viDemo_base + 2, 25, 52, ROTATE_NONE ],plExits);
      plExits = Cons([ 1, 4, viDemo_base + 2, 25, 52, ROTATE_NONE ],plExits);

      propagate;
   }

   CreateStandardObjects()
   {
      local oSign;
      
      send(self,@NewHold,#what=Create(&HazarElder),#new_row=5,#new_col=3,#fine_row=32,#fine_col=32,
           #new_angle=ANGLE_EAST);

      oSign = Create(&Sign,#desc=vrSign,#newbie=TRUE,#name=guest5_signname);
      send(self,@NewHold,#what=oSign,#new_row=3,#new_col=2,#fine_row=32,#fine_col=00);

      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_JUG),
           #new_row=2,#new_col=4,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_URN),
           #new_row=4,#new_col=4,#fine_row=32,#fine_col=32,#angle=ANGLE_EAST);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_SKULL7),
           #new_row=4,#new_col=2,#fine_row=48,#fine_col=48,#angle=ANGLE_NORTH);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_FIXINS),
           #new_row=4,#new_col=1,#fine_row=48,#fine_col=48,#angle=ANGLE_NORTH);

      % Lighting
      send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=1,#new_col=3,#fine_row=45,#fine_col=27); 

      propagate;
   }

   SeanceCheck()
   {
      return FALSE;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

