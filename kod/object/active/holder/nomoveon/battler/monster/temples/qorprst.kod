% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
QorPriestess is Temples

constants:

   include blakston.khd

resources:

   qorpriestess_name_rsc = "Priesterin Zuxana"
   qorpriestess_icon_rsc = qorprst.bgf
   qorpriestess_desc_rsc = "Der perfekte Diener der schändlichen Qor. Die Schatten verdichten sich, wo diese mißgünstige Frau auftaucht. Sie verfügt über eine verschlagene Sinnlichkeit, die sie nutzt, damit Männer und Frauen sich dem dunklen Willen Qors ergeben. Wen sie nicht zu Qor verführen kann, sieht sie lieber tot."





   Qor_forget_potion_sale = "~I~rDu kannst den %s%s kaufen. Qor wird sich freuen, Dich der Verbote von Sha-Lills Lehren zu berauben.~n~k"

   qorpriestess_already_have_spell = "~bSpiel nicht mit mir, %s. Du hast bereits am dem trickreichen Spiel Riijas teilgenommen.~n~k"

   qorpriestess_not_ready = "~bQor besiegt diesen trickreichen Gott! Riija stahl Teile für Verblöden und Austausch von der Niederträchtigen. Geh' und unterwerfe dich dem verlassenen Gott der Insel und werde ein Adept der Künste des Trickmeisters. Nur dann kann ich dir wirklich alle Teile der Geheimnisse um Austauschen offenbaren.~n~k"



   qorpriestess_teach_song = "Bist Du einer dieser jaulenden Barden? Ich kann Dir ein Lied beibringen, dass die Magie Deiner Gegner behindert. Auch wenn Deine kleinen Ohren den wahren Klang der Melodie nie ganz hören und genießen werden."


   qorpriestess_not_powerful = "Komm wieder, wenn Du Dich von Deinem Schutzengel befreit hast und bereit bist, andere zum Ruhme der Niederträchtigen zu töten.~n~k"


   qorpriestess_teach = "Die Verdorbenheit Qors lehrt Dich "

classvars:
   vrTeach_message = qorpriestess_teach
   vrName = qorpriestess_name_rsc
   vrIcon = qorpriestess_icon_rsc
   vrDesc = qorpriestess_desc_rsc

   viQuestID=QST_ID_QOR_DISCIPLE
   viKarma = -90
   viAttributes = MOB_NOFIGHT | MOB_LISTEN | MOB_RANDOM | MOB_RECEIVE | MOB_TEACHER | MOB_COND_SELLER | MOB_PERM_QUESTER
   viOccupation = MOB_ROLE_PRIESTESS

messages:

   AffectMood(why = $,what = $)
   {
      if why = MOODMOD_DUSK
      {
         send(self,@SetMood,#new_mood=piMood + 4);
         
         return;
      }
      
      if why = MOODMOD_DAWN
      {
         send(self,@SetMood,#new_mood=piMood - 4 );
         
         return;
      }
      
      return;
   }

   UserEntered(who = $)
   {
      local iFlags;
      
      iFlags = send(who,@GetObjectFlags);
      
      if iFlags & PLAYER_PK
      {
         send(self,@SetMood,#new_mood=piMood + 2);
         propagate;
      }
      
      if iFlags & PLAYER_OUTLAW
      {
         send(self,@SetMood,#new_mood=piMood + 1);
      }
      
      propagate;
   }

   InitCondSale()
   {
      local oObj;
      
      oObj=Create(&ForgetPotionShalille);
      Send(Send(SYS,@GetLibrary),@AddToMobLib,#mob=self,
           #triggers=[Send(oObj,@GetName)],
           #action=[LIBACT_CONDITIONAL,oObj,2500,Qor_forget_potion_sale]);
           
      return;
   }

   SetForSale()
   {
      plFor_sale = [$,$,
        [ SID_DARKNESS, SID_DETECT_GOOD,
          SID_ACID_TOUCH, SID_KARAHOLS_CURSE, SID_UNHOLY_WEAPON,
          SID_ENFEEBLE, SID_HOLD, SID_NODEBURST,
          SID_SWAP, SID_DEFILE, SID_INVISIBILITY, SID_CLOAK, SID_POISON_FOG,
          SID_PROFANE_RESONANCE],
       $ ];
       
      return;
   }
   
   CanDoTeach(who=$,sid=0)
   {
      if sid = SID_SWAP
         AND NOT send(self,@CanAddSpell,#report=TRUE,#who=who,#num=sid)
      {
         return FALSE;
      }

      if sid = SID_PROFANE_RESONANCE
      {
         send(self,@SayToOne,#target=who,#message_rsc=qorpriestess_teach_song);
      }         
      
      propagate;
   }
   
   CanAddSpell(who=$,num=0, report = FALSE)
   {
      local i, oSpell, bFound;
			
      if who = $ OR num = 0
      { 
         DEBUG("Called CanAddSpell with bad parameters!");
         return FALSE;
      }

      if num = SID_SWAP
      {   	    
         if send(who,@HasSpell,#num=num) 
         {	 
            if report
            { 
               post(self,@SayToOne,#target=who,#message_rsc=qorpriestess_already_have_spell,
	                 #parm1=send(who,@GetName));
            }

            return FALSE;
         }

         bFound = FALSE;
         for i in send(who,@GetSpellList) 
         {	       
  	         oSpell = send(SYS,@FindSpellByNum,#num=send(who,@DecodeSpellNum,#compound=i)); 
  	         if send(oSpell,@GetSchool) = SS_RIIJA
  	            AND send(oSpell,@GetLevel) > 3 
  	         {
  	            %% player has a high enough level spell in the required school, can learn the spell.
  	            bFound = TRUE;
  	            
  	            break;
            }  
         }
         
	      %% Player doesn't have a high enough level spell in the required school, denied
         if NOT bFound
         {	       	  
            if report
            { 		 
	            post(self,@SayToOne,#target=who,#message_rsc=qorpriestess_not_ready); 
            }
            
  	         return FALSE;	       
         }
      }

      if num = SID_SUMMON_POISON_FOG
         AND NOT send(who,@CheckPlayerFlag,#flag=PFLAG_PKILL_ENABLE)
      {
         if report
         {
            send(who,@MsgSendUser,#message_rsc=qorpriestess_not_powerful);
         }
         
         return FALSE;
      }

      propagate;
   }


end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

