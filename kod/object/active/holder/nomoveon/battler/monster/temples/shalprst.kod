% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ShalillePriestess is Temples

constants:

   include blakston.khd

resources:

   shalpriestess_name_rsc = "Priesterin Xiana"
   shalpriestess_icon_rsc = shalprst.bgf
   shalpriestess_desc_rsc = "Sauber und formell spricht diese Priesterin voll friedlicher Gelassenheit nur freundliche Worte. Sie wünscht sogar den Anhängern Qors Frieden und betet für ihre Erlösung."


   shal_forget_potion_sale = "~bDu solltest den %s%s kaufen und trinken; Sha-Lill wird Dich segnen, indem sie alle Spuren von Qor aus Deinen Gedanken vertreibt.~n~k"

   priestess_token_delivered_rsc = "~bAhhh. Ich werde dafür sorgen, dass dies ans richtige Ratsmitglied zurückgegeben wird. %s~n~k"
   priestess_faction_delivered_rsc = "~bDu scheinst ein guter Mensch zu sein. Warum gibst Du Dich mit diesen Parteien ab? Wir werden uns darum kümmern.~n~k"
   priestess_neutral_delivered_rsc = "~bEinen Menschen, so rein wie Du, sieht man selten in diesen Tagen voller politischer Intrigen. Es ist so erfrischend.~n~k"

   shalpriestess_already_have_spell = "~bSehe in Dich hinein, %s und Du wirst das Licht finden, das bereits in Deinem Geist erstrahlt.~n~k"

   shalpriestess_not_ready = "~bDie Schwierigkeiten des göttlichen Hammers können nur von jemanden erfaßt werden, der in den Lehren des Kriegsgottes wohl bewandert ist. Suche weiter, Kind, und kehre zurück, wenn Dein Geist seinem Weg ein wenig weiter gefolgt ist.~n~k"


   shalillepriestess_teach_song = "Oh, Du folgst Jala? Ich kenne ein wunderschönes Lied, dass die Mächte des Bösen behindert. Ich bringe es denen bei, die es zu lernen vermögen."


   shalillepriestess_teach = "Die Güte Sha-Lills bietet "

classvars:

   vrTeach_message = shalillepriestess_teach
   vrName = shalpriestess_name_rsc
   vrIcon = shalpriestess_icon_rsc
   vrDesc = shalpriestess_desc_rsc
   viQuestID = QST_ID_SHALILLE_DISCIPLE
   viKarma = 90
   viAttributes = MOB_NOFIGHT | MOB_LISTEN | MOB_RANDOM | MOB_RECEIVE | MOB_TEACHER | MOB_COND_SELLER | MOB_PERM_QUESTER
   viOccupation = MOB_ROLE_PRIESTESS

messages:

   AffectMood(why = $, what = $)
   {
      if why = MOODMOD_DAWN 
      {
         send( self, @SetMood, #new_mood = piMood + 3 );
         
         return;
      }
      
      if why = MOODMOD_DUSK 
      {
         send( self, @SetMood, #new_mood = piMood - 3 );
         
         return;
      }
      
      return;
   }

   Constructor()
   {
	   plWantedItems=[&Token];
      propagate;
   }

   InitCondSale()
   {
      local oObj;
   
      oObj=Create(&ForgetPotionQor);
      Send(Send(SYS,@GetLibrary),@AddToMobLib,#mob=self,
           #triggers=[Send(oObj,@GetName)],
           #action=[LIBACT_CONDITIONAL,oObj,2500,Shal_forget_potion_sale]);
           
      return;
   }

   SetForSale()
   "We make the mob a spell teacher of bless and lighting (as well as"
   "letting her sell chalices for profit. Also, we add a skll for fun"
   {
      plFor_sale = [$,$,
        [ SID_MINOR_HEAL, SID_HOLY_WEAPON, SID_DETECT_EVIL,
          SID_HOLY_TOUCH, SID_REMOVE_CURSE, SID_CURE_POISON,
          SID_CURE_DISEASE, SID_RESCUE,
          SID_MARK_OF_DISHONOR, SID_PURIFY,
          SID_FORCES_OF_LIGHT, SID_MAJOR_HEAL, SID_UMBRELLA, SID_SPIRITUAL_HAMMER,
          SID_PORTAL_OF_LIFE, SID_HOLY_SYMBOL, SID_FINAL_RITES, SID_BREATH_OF_LIFE,
          SID_SEANCE, SID_RESIST_ACID, SID_DAZZLE,
          SID_SACRED_RESONANCE ],
        $ ];
        
      return;
   }

   CanDoTeach(who=$,sid=0)
   {
      if sid = SID_SPIRITUAL_HAMMER
         AND NOT send(self,@CanAddSpell,#report=TRUE,#who=who,#num=sid)
      {
         return FALSE;
      }

      if sid = SID_SACRED_RESONANCE
      {
         send(self,@SayToOne,#target=who,#message_rsc=shalillepriestess_teach_song);
      }         
      
      propagate;
   }
   
   CanAddSpell(who=$,num=0,report = FALSE)
   {
      local i, oSpell, bFound;
			
      if who = $ OR num = 0
      { 
         DEBUG("Called CanAddSpell with bad parameters!");
         return FALSE;
      }

      if send(who,@HasSpell,#num=num) 
      {	 
         if report
         { 
            post(self,@SayToOne,#target=who,#message_rsc=shalpriestess_already_have_spell,
	              #parm1=send(who,@GetName));
         }
         
         return FALSE;
      }

      if num = SID_SPIRITUAL_HAMMER
      {   	    
         bFound = FALSE;
         for i in send(who,@GetSpellList) 
         {	       
  	         oSpell = send(SYS,@FindSpellByNum,#num=send(who,@decodespellnum,#compound=i)); 
  	         if send(oSpell,@GetSchool) = SS_KRAANAN
  	            AND send(oSpell,@GetLevel) > 2 
  	         {
  	            %% player has a high enough level spell in the required school, can learn the spell.
  	            bFound = TRUE ;
  	            break;
            }  
         }
         
	      %% player doesn't have a high enough level spell in the required school, denied

         if NOT bFound
         {	       	  
            if report
            { 		 
	            post(self,@saytoone,#target=who,#message_rsc=shalpriestess_not_ready); 
            }
            
  	         return FALSE;	       
         }
      }
      
      propagate;
   }

   CheckWhyWanted(obj=$,who=$)
   {
	   local temp_rsc, oGame;

      if NOT isClass(obj,&Token)
      {
         propagate;
      }
	  
      oGame = Send(SYS,@GetTokenGame);
      
      if oGame <> $ 
         AND Send(oGame,@IsTokenReal,#obj=obj)
      {
	      if Send(who,@GetFaction)<>FACTION_NEUTRAL
	      {
	         temp_rsc=priestess_faction_delivered_rsc;
	      }
         else 
	      {
	         temp_rsc=priestess_neutral_delivered_rsc;
	      }
	      
         Send(oGame,@IncreaseScandalChance);
         Send(poOwner,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,
		        #string=priestess_token_delivered_rsc,#parm1=temp_rsc);
		        
         return TRUE;
      }
      
      propagate;
   }

   GetFaction()
   {
      return FACTION_NEUTRAL;
   }

   UserEntered(who = $)
   {
      local iFlags;
      
      if send(who,@GetHomeRoom) = RID_MAR_INN
      {
         send(self,@SetMood,#new_mood=piMood + 2);
      }
      
      iFlags = send(who, @GetObjectFlags);
      
      if iFlags & PLAYER_PK
      {
         send(self,@SetMood,#new_mood=piMood - 2);
         
         propagate;
      }
      
      if iFlags & PLAYER_OUTLAW
      {
         send(self,@SetMood,#new_mood=piMood - 1 );
      }
      
      propagate;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


