% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
TosApothecary is TosTown

constants:

   include blakston.khd

resources:

   tosapothecary_name_rsc = "Frisconar"
   tosapothecary_icon_rsc = tsapoth.bgf
   tosapothecary_desc_rsc = "Dieser kranke Mann starrt dich aus trüben Augen über den Tresen hinweg an. Sein Atem wirkt gequält und Schweiß steht auf seiner Stirn. Frisconar ist fast ebenso für sein lebhaftes Interesse an magischen Reagenzien wie für seinen mürrischen Blick aufs Leben bekannt."



   TsAp_entry_welcome = "Schließ die Tür. Ich vertrage keinen Zug."
   TsAp_Solagh_sale = "Tatsächlich habe ich ein paar Phiolen mit Solagh, von denen ich bereit wäre mich zu trennen. Normalerweise würde ich es für mich selbst aufbewahren, aber vor kurzem habe ich ein paar weitere von einem Zauberer bekommen, der durch die Stadt kam. Ich glaube, er stellt es selber her."


   TsAp_unwanted_give = "~k%s%s sagt zu Dir, \"Was ist das? Ich will es nicht! Es ist wahrscheinlich mit einem Fluch belegt.~n~k\""


classvars:

   vrName = tosapothecary_name_rsc
   vrIcon = tosapothecary_icon_rsc
   vrDesc = tosapothecary_desc_rsc
   viMerchant_markup = MERCHANT_DISCOUNT
   viAttributes = MOB_NOFIGHT | MOB_TEACHER | MOB_NOMOVE | MOB_RANDOM | MOB_LISTEN | MOB_BUYER | MOB_SELLER | MOB_LAWFUL | MOB_COND_SELLER
   viOccupation = MOB_ROLE_APOTHECARY

   vrUnwanted_give = TsAp_unwanted_give

properties:
   
messages:

   AffectMood(why = $, what = $)
   {
      if why = MOODMOD_DAWN
      {
         send(self,@SetMood,#new_mood=piMood+5);

         return;
      }
      
      if why = MOODMOD_DUSK
      {
         send(self,@SetMood,#new_mood=piMood-5);

         return;
      }
      
      return;
   }

   ObjectDesired(what=$)
   {
      if send(self,@IsObjectReagent,#what=what)
         AND NOT send(self,@IsObjectGem,#what=what)
      {
         return TRUE;
      }

      return FALSE;
   }

   SetForSale()
   {
      plFor_sale = [ [Create(&Torch),
                      Create(&Herbs,#number=5),
                      Create(&Mushroom,#number=5),
                      Create(&Elderberry,#number=4),
                      Create(&BlueMushroom,#number=4),
                      Create(&RedMushroom,#number=4),
                      Create(&Flask)],$,
                     [SID_HOSPICE], $];
      return;
   }

   InitCondSale()
   {
      local oObj;

      oObj = Create(&Solagh,#number=4);
      Send(Send(SYS,@GetLibrary),@AddToMobLib,#mob=self,
           #triggers=[Send(oObj,@GetName)],
           #action=[LIBACT_CONDITIONAL,oObj,250,TsAp_Solagh_sale]);
           
      return;
   }

   UserEntered(who = $)
   {
      Send(poOwner,@SomeoneSaid,#what=self,#string=TsAp_entry_welcome,
              #type = SAY_RESOURCE);
              
      if Send(who,@GetAction) = UA_SAD
      {
         send(self,@SetMood,#new_mood=piMood + 2);
      }
      
      if Send(who,@GetAction) = UA_HAPPY
      {
         send(self,@SetMood,#new_mood=piMood - 2);
      }
      
      propagate;
   }

end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


