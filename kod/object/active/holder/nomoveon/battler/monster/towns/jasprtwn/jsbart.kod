% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
JasperBartender is JasperTown

constants:

   include blakston.khd

resources:

   Jasper_Bartender_name_rsc = "Pietro"
   Jasper_Bartender_icon_rsc = jsbart.bgf
   Jasper_Bartender_desc_rsc = "Ein übellauniger und mürrischer Mensch bedient an der Bar. Das ist Pietro, der hitzige Säufer."


   JsBar_entry_welcome = "Würdest Du bitte die Tür schließen!"

   JasperBartender_unwanted_keep = "~k%s%s wirft den Gegenstand in den Müll und grinst höhnisch, \"Verschwinde.~n~k\""
   JasperBartender_unwanted_pay = "~k%s%s teilt Dir mit, \"Ich gebe Dir ein paar Schillinge dafür, weil meine Mutter bald Geburtstag hat.~n~k\""

   JasperBartender_unwanted_give = "~k%s%s teilt Dir mit, \"Was schaust wie ein Trödelkäufer? Es gibt hier nichts zu betteln, also sieh zu, dass Du meine Bar verläßt, Fremder.~n~k\""


classvars:

   vrName = Jasper_Bartender_name_rsc
   vrIcon = Jasper_Bartender_icon_rsc
   vrDesc = Jasper_Bartender_desc_rsc
   viMerchant_markup = MERCHANT_NORMAL
   viAttributes = MOB_NOFIGHT | MOB_SELLER | MOB_RANDOM | MOB_LISTEN | MOB_NOMOVE | MOB_RECEIVE
   viOccupation = MOB_ROLE_BARTENDER

   vrUnwanted_keep = JasperBartender_unwanted_keep
   vrUnwanted_pay = JasperBartender_unwanted_pay
   vrUnwanted_give = JasperBartender_unwanted_give

properties:

messages:

   AffectMood(what=$,why=$)
   {
      if why = MOODMOD_WANDERER_ENTERED
      {
         if IsClass(what,&Minstrel)
         {
            send(self,@SetMood,#new_mood=piMood - 50);
         }
         
         return;
      }
      
      if why = MOODMOD_DAWN
      {
         send(self,@SetMood,#new_mood=piMood + 7);
         
         return;
      }
      
      if why = MOODMOD_DUSK
      {
         send(self,@SetMood,#new_mood=piMood - 7);
         
         return;
      }
      
      if why = MOODMOD_SELL_ITEM
      {
         if isClass(what,&Food)
         {
            if send(what,@IsAlcohol)
            {
               send(self,@SetMood,#new_mood=piMood + 1);
            }
            else
            {
               send(self,@SetMood,#new_mood=piMood + 2);
            }
         }
      }
      
      return;
   }

   SetForSale()
   {
      plFor_sale=[[Create(&Bread,#number=4),
                   Create(&StoutGoblet),
                   Create(&Chess),
                   Create(&MeatPie,#number=4)
                   ],
                  $,$];
      return;
   }

   UserEntered()
   {
      Send(poOwner,@SomeoneSaid,#what=self,#string=JsBar_entry_welcome,
             #type = SAY_RESOURCE);
      send( self, @SetMood, #new_mood = piMood - 2 );
      
      propagate;
   }
   
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

