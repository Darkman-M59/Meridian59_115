% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
GuildCreator is BarloqueTown

constants:

   include blakston.khd

resources:

   GuildCreator_name_rsc = "Frular"
   GuildCreator_icon_rsc = gcreator.bgf
   GuildCreator_desc_rsc = "Vor Dir steht der erhabene Verwalter der Gildenhallen. Frular hat große Gewinne mit dem Verkauf offizieller Gildentitel, der Verwaltung ihrer Freibriefe und dem Verpachten von Gildenhallen gemacht."




   GuildCreator_mailname_rsc = "Frular, der Gildenmeister"

   GuildCreator_not_master = "Nur die Anführer einer Gilde können eine Gildenhalle kaufen."
   GuildCreator_not_mature_yet = "Ihr könnt eine Gildenhalle erstehen, wenn Eure Gilde eine Zeitlang aktiv gewesen ist."

   GuildCreator_have_guild = "Ihr habt bereits eine Gilde und eine Gildenhalle."
   GuildCreator_no_halls = "Alle Gildenhallen sind bereits vermietet."
   GuildCreator_no_rent = "Warum macht Ihr mir diese Angebote? Ihr schuldet keine Gildenpacht."
   GuildCreator_not_enough_money = "Ihr habt keine %i Schillinge, die Ihr mir geben könnt!"
   GuildCreator_thanks = "Ich danke Euch für die Bezahlung."

   GuildCreator_player_active = "Meine Aufzeichnungen belegen, dass dieser Bürger in der Vergangenheit aktiv gewesen ist."

   GuildCreator_player_inactive = "Unglücklicherweise zeigen meine Aufzeichnungen, dass dieser Bürger gegenwärtig nicht aktiv ist."


   gcreator_no_guild = "Ihr gehört keiner Gilde an und schuldet somit auch keine Miete."
   gCreator_no_rent = "Ihr schuldet zur Zeit keine Miete."
   gcreator_rent_due = "%s%q schuldet mir momentan noch %i Schillinge."
   gcreator_hours_til_rent = "Die Gilde hat noch %i Stunden Zeit, um ihre Schulden zu begleichen. Ansonsten wird die Gilde aufgelöst!"


   gcreator_lesshour_til_rent = "Die Gildenmitglieder haben noch weniger als eine Stunde Zeit, um die Miete zu bezahlen. Ansonsten wird die Gilde aufgelöst."


   gcreator_hour_til_rent = "Die Gildenmitglieder haben noch genau eine Stunde Zeit, um die Miete zu bezahlen. Ansonsten wird die Gilde aufgelöst."


   gcreator_positive_balance = "%s%q hat eine positive Bilanz von %i Schillingen. Ich danke Euch für die zeitige Zahlung."



   gcreator_low_level = "Ihr seid noch nicht soweit, den Gefahren der Gildenintrigen die Stirn zu bieten."

   gcreator_unwanted_give = "~k%s%s sagt zu Dir, \"Ihr könnt Eure Miete nur mit Schillingen bezahlen!~n~k\""


   GuildCreator_rent_command = "miete"

classvars:

   vrName = GuildCreator_name_rsc
   vrIcon = GuildCreator_icon_rsc
   vrDesc = GuildCreator_desc_rsc

   viDefinite = ARTICLE_NONE
   viIndefinite = ARTICLE_NONE

   viAttributes = MOB_NOMOVE | MOB_NOFIGHT | MOB_LISTEN | MOB_RECEIVE%| MOB_BUYER
   viOccupation = MOB_ROLE_GUILD_CREATOR

   vrUnwanted_give = gcreator_unwanted_give

properties:
   
messages:

   UserEntered(who = $)
   {
      if Send(who,@GetGender) = GENDER_FEMALE
      {
         send(self,@SetMood,#new_mood=piMood+1);
      }
      
      propagate;
   }

   SomeoneSaid(what=$,string=$)
   {
      local oPlayer, oGuild;
      
      if StringEqual(string,GuildCreator_rent_command)
         OR StringEqual(string,"rent")
      {
         send(self,@ReportRent,#who=what);
      }

      if IsClass(what,&Player)
      {
         oGuild = send(what,@GetGuild);
         if oGuild <> $
            AND send(oGuild,@GetRank,#who=what) >= RANK_LORD
         {
            oPlayer = send(SYS,@FindUserByString,#string=string);
            if oPlayer <> $
               AND oPlayer <> what
               AND send(oPlayer,@GetGuild) = oGuild
            {
               if send(oPlayer,@IsUserInactive)
               {
                  send(self,@SayToOne,#target=what,#message_rsc=GuildCreator_player_inactive);
               }
               else
               {
                  send(self,@SayToOne,#target=what,#message_rsc=GuildCreator_player_active);
               }
            }
         }
      }

      propagate;
   }

   AffectMood(why = $, what = $)
   {
      if why = MOODMOD_FACTION_CHANGE
      {
         if what = FACTION_DUKE
         {
            send(self,@SetMood,#new_mood=piMood+1);

            return;
         }
         
         if what = FACTION_REBEL
         {
            send(self,@SetMood,#new_mood=piMood-1);

            return;
         }
      }
      
      if why = MOODMOD_ACCEPT_RENT
      {
         send(self,@SetMood,#new_mood=piMood+2);

         return;
      }
      
      if why = MOODMOD_DAWN
      {
         send(self,@SetMood,#new_mood=piMood+2);

         return;
      }
      
      if why = MOODMOD_DUSK
      {
         send(self,@SetMood,#new_mood=piMood-2);

         return;
      }
      
      if why = MOODMOD_SELL_GHALL
      {
         send(self,@SetMood,#new_mood=piMood+7);

         return;
      }

      return;
   }

   ReportRent(who=$)
   {
      local oRent, oGuild, oHours;

      oGuild = send(who,@GetGuild);
      if oGuild = $
         OR IsClass(oGuild,&NecromancerGuild)
      {
         send(who,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,
              #string=gcreator_no_guild);

         return;
      }

      oRent = send(oGuild,@GetRentDue);

      if oRent = 0
      {
         send(who,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,
              #string=gcreator_no_rent);

         return;
      }

      if oRent > 0
      {
         send(who,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,#string=gcreator_rent_due,
              #parm1=send(oGuild,@GetCapDef),#parm2=send(oGuild,@GetName),
              #parm3=oRent);

         oHours = send(oGuild,@GetRentCounter)/10;
         
         if oHours > 1
         {
            send(who,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,
                 #string=Gcreator_hours_til_rent,#parm1=oHours-1);
         }
         
         if oHours = 2
         {
            send(who,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,
                 #string=Gcreator_hour_til_rent);
         }

         if oHours = 1
         {
            send(who,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,
                 #string=Gcreator_lesshour_til_rent);
         }
         
         return;
      }

      if oRent < 0
      {
         send(who,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,
              #string=gcreator_positive_balance,
              #parm1=send(oGuild,@GetCapDef),
              #parm2=send(oGuild,@GetName),#parm3=-(oRent));

         return;
      }

      return;
   }

   MobIsSeller()
   {
      return TRUE;
   }

   GetForSale(who = $)
   "This is hacky--user.kod:UserBuy() aborts if it gets $ returned from here, "
   "so we can use it as a hook."
   {
      local oGuild,i,iAvailable;
      
      oGuild = Send(who,@GetGuild);
      if oGuild <> $
      {
         if isClass(oGuild,&NecromancerGuild)
         {
            return $;
         }

         if Send(oGuild,@GetRank,#who=who) >= RANK_LIEUTENANT
         {
            if Send(oGuild,@IsMature) 
            {
               if Send(oGuild,@GetGuildHall) <> $
               {
                  Send(who,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,
                       #string=GuildCreator_have_guild);

                  return;
               }

               iAvailable = 0;
               for i in Send(SYS,@GetGuildHalls)
               {
                  if Send(i,@GetPurchaseValue,#who=who) <> -1
                  {
                     iAvailable = iAvailable + 1;
                  }
               }
               
               if iAvailable = 0
               {
                  Send(who,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,
                       #string=GuildCreator_no_halls);

                  return;
               }

               Send(who,@SendBuyGuildHall);
               send(self,@AffectMood,#why=MOODMOD_SELL_GHALL);
               
               return;
            }
            
            Send(who,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,
                 #string=GuildCreator_not_mature_yet);

            return;
         }

         Send(who,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,
              #string=GuildCreator_not_master);

         return;
      }
      
      % Player doesn't have a guild.  check to see if he's eligible before
      %  letting him start one.

      if not send(who,@CheckPlayerFlag,#flag=PFLAG_PKILL_ENABLE)
      {
         send(who,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,#string=gcreator_low_level);

         return;
      }
      
      Send(who,@SendCreateGuild);
      
      return $;
   }

   ReqOffer(what = $,item_list = $)
   {
      local i, iMoney, oMoney, oGuild;

      % Check for if in the same room.
      if send(what,@GetOwner) <> poOwner
      {
         debug("ALERT! ",send(what,@GetTRUEName),what," offered items to ",send(self,@GetTrueName)," from distant RID ",send(send(what,@GetOwner),@GetRoomNum));
         
         return FALSE;
      }     

      for i in item_list
      {
         if NOT IsClass(i,&Money)
         {
            propagate;
         }
      }

      oGuild = Send(what,@GetGuild);
      if oGuild = $ OR IsClass(oGuild,&NecromancerGuild)
      {
         Send(what,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,
              #string=GuildCreator_no_rent);
         
         return FALSE;
      }

      iMoney = 0;
      for i in item_list
      {
         iMoney = iMoney + Send(i,@GetValue);
      }

      oMoney = Send(what,@GetMoneyObject);
      
      if oMoney = $
         OR Send(oMoney,@GetNumber) < iMoney
      {
         Send(what,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,
              #string=GuildCreator_not_enough_money,#parm1=iMoney);
              
         return FALSE;
      }

      Send(oMoney,@SubtractNumber,#number=iMoney);
      Send(what,@SomeoneSaid,#what=self,#type=SAY_RESOURCE,#string=GuildCreator_thanks);
      Send(self,@AffectMood,#why=MOODMOD_ACCEPT_RENT);
      Send(Send(what,@GetGuild),@PayRent,#amount=iMoney);

      return FALSE;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

