% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
fourCouncilor is Council

constants:

   include blakston.khd
   NUM_HP_FOR_SPECIAL = 85

resources:

   fourCouncilor_name_rsc = "Drex"
   fourCouncilor_icon_rsc = fourcon.bgf
   fourCouncilor_desc_rsc = "Ein weiser Arzt, über den das Gerücht geht, er hätte die Heilungsfähigkeiten seines Körpers vervollkommnet. Sein Körper ist alt und verwittert, doch immer noch vollkommen gesund. Er glaubt wahrhaftig daran, dass die Stimme des Volkes bestimmt, wer sie anführt und stellt seinem Bündnispartner frei, zwischen den verschiedenen Parteien zu wechseln."

   fourcon_true_ideal_rsc = "Du besitzt ziemlich viel Lebenskraft. Soviel Training beeindruckt mich."
   fourcon_half_ideal_rsc = "Wie die meisten Leute, die ich treffe, siehst Du ziemlich schwächlich aus. Du kümmerst Dich zuwenig um Deine Lebenskraft."

   fourcon_unwanted_give = "~k%s%s sagt zu Dir, \"Ich habe keinen Bedarf an weltlichen Besitztümern.~n~k\""

   fourCouncilor_not_ready = "Ah, Du bist nicht kräftig genug, um zu lernen, wie Du Deinen zweiten Atem anwendest!"

classvars:

   vrName = fourCouncilor_name_rsc
   vrDesc = fourCouncilor_desc_rsc
   vrIcon = fourCouncilor_icon_rsc
   viAttributes = MOB_NOFIGHT | MOB_NOMOVE | MOB_LISTEN | MOB_RANDOM | MOB_RECEIVE | MOB_TEACHER
   viOccupation = MOB_ROLE_COUNCILMEMBER
   viInitialState = 001
   viGender = GENDER_MALE   

   viHomeroom = RID_CASTLE1C
   viMyRow = 7
   viMyCol = 34
   viMyANGLE = ANGLE_NORTH_EAST

   vrUnwanted_give = fourcon_unwanted_give


properties:

   piStateBump=1

messages:

   Constructor()
   {
     plWantedItems = [&FourToken];
     propagate;
   }

   SetForSale()
   {
      plFor_Sale = [$,[ SKID_SECOND_WIND ],$,$];
      return;
   }

   CheckSpecialDeliverer(who=$)
   {
     piStateBump = 1; 
     if Send(who,@GetMaxHealth) >= NUM_HP_FOR_SPECIAL
       { piStateBump = 2;  return FourCon_true_ideal_rsc; }
     else { return FourCon_half_ideal_rsc; }
     return;
   }

   CanDoTeach(who=$,sid=0)
   {
      if not send(self,@SpecialTeachChecks,#report=TRUE,#who=who,#num=sid)
      {
         return FALSE;
      }
      
      propagate;
   }
   
   CanAddSkill(who=$, num=0, report=FALSE)
   {
      if not send(self,@SpecialTeachChecks,#report=report,#who=who,#num=num)
      {
         return FALSE;
      }
      
      propagate;
   }
   
   SpecialTeachChecks(who=$, num=0, report=FALSE)
   {			
      if who = $ or num = 0
      { DEBUG("Called canaddspell with bad parameters!"); return FALSE; }
   
      if (num = SKID_SECOND_WIND) and (Send(who,@GetMaxHealth) < NUM_HP_FOR_SPECIAL)
      {
         post(self,@saytoone,#target=who,#message_rsc=fourCouncilor_not_ready);
         return FALSE;
      }
 
      return TRUE;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


