% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ThreeCouncilor is Council

constants:

   include blakston.khd
   NUM_SKILLS_FOR_SPECIAL = 8

resources:

   threeCouncilor_name_rsc = "Zylill"
   threeCouncilor_icon_rsc = threecon.bgf
   threeCouncilor_desc_rsc = "Ein Veteran der Kriege mit Ukgot. Er beherrscht jede Art des Kampfes. Bekleidet mit einer leichten Rüstung und den formellen militärischen Insignien, sitzt er untätig in seiner Hütte wie ein General, der Friedenszeiten verabscheut. Zylill hat lange bei den Streitkräften des Herzogs gedient und in dieser Zeit die Welt vor den Trollen geschützt. Er hat viele Geschichten zu erzählen."




   threecon_true_ideal_rsc = "Es ist beeindruckend, einen anderen zu treffen, der sich so gut auf den Kampf versteht."
   threecon_half_ideal_rsc = "Deine armseligen Fähigkeiten beeindrucken mich wahrlich nicht."

   threecon_unwanted_give = "~k%s%s teilt Dir mit, \"Das kann ich nicht brauchen.~n~k\""


classvars:

   vrName = threeCouncilor_name_rsc
   vrDesc = threeCouncilor_desc_rsc
   vrIcon = threeCouncilor_icon_rsc
   viAttributes = MOB_NOFIGHT | MOB_NOMOVE | MOB_LISTEN | MOB_RANDOM | MOB_RECEIVE | MOB_TEACHER
   viOccupation = MOB_ROLE_COUNCILMEMBER
   viInitialState = 001  
   viGender = GENDER_MALE   

   viHomeroom = RID_F3
   viMyRow = 27
   viMyCol = 9
   viMyAngle = ANGLE_NORTH

   vrUnwanted_give = threecon_unwanted_give


properties:

   piStateBump=1

messages:

   AffectMood( why = $, what = $ )
   {
      if( why = MOODMOD_DAWN )
      {
	 send( self, @SetMood, #new_mood = piMood + 3 );
	 return;
      }
      if( why = MOODMOD_DUSK )
      {
	 send( self, @SetMood, #new_mood = piMood - 3 );
	 return;
      }
      return;
   }

   Constructor()
   {
     plWantedItems = [&ThreeToken];
     propagate;
   }

   SetForSale()
   {
      plFor_Sale = [$,[ SKID_DISARM ],$,$];
      return;
   }

   CheckSpecialDeliverer(who=$)
   {
     piStateBump = 1; 
     if Length(Send(who,@GetSkillList)) >= NUM_SKILLS_FOR_SPECIAL
       { piStateBump = 2;  return threeCon_true_ideal_rsc; }
     else { return threeCon_half_ideal_rsc; }
     return;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


