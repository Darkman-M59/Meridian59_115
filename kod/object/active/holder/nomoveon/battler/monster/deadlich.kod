% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
DeadLich is Monster

constants:

   include blakston.khd
   LICH_ILLUSION_TIME = 2 * 60 * 1000  % 2 minutes
   
resources:

   DeadLich_name_rsc = "Die geisterhaften Überreste der Königin Venya'cyr"
   DeadLich_icon_rsc = lichax.bgf
   DeadLich_desc_rsc = "Ein geisterhafter Haufen reichgeschmückter, formeller Kleider scheint alles zu sein, was von der einst so mächtigen Königin übriggeblieben ist."

   DeadLich_name2_rsc = "Die geisterhaften Überreste der Königin Venya'cyr"
   DeadLich_icon2_rsc = lichbx.bgf
   DeadLich_desc2_rsc = "Ein geisterhafter Haufen reichgeschmückter, formeller Kleider scheint alles zu sein, was von der einst so mächtigen Königin übriggeblieben ist.Wie dem auch sei, immer, wenn Du wegsiehst, bekommst Du aus den Augenwinkeln heraus flüchtig einen dünnen, schimmernden Faden von Dunkelheit zu sehen, der an ihre sterblichen Überreste gebunden scheint. Er erstreckt sich unendlich weit in eine Richtung, die mit normalen geometrischen Regeln nicht beschreibbar ist."

   deadlich_dispel = "Der Haufen reichverzierter Kleider wechselt auf mystische Art die Farbe!"
   deadlich_respel = "Der Haufen reichverzierter Kleider wechselt zurück zu seiner Originalfarbe."

classvars:
   vrName = DeadLich_name_rsc
   vrIcon = DeadLich_icon_rsc
   vrDesc = DeadLich_desc_rsc
   vrName2 = DeadLich_name2_rsc
   vrIcon2 = DeadLich_icon2_rsc
   vrDesc2 = DeadLich_desc2_rsc
   viDefinite = ARTICLE_THE
   viIndefinite = ARTICLE_THE
   viGender = GENDER_NEUTER

   viLevel = 200
   viDifficulty = 9
   viKarma = -100
   viDefault_behavior = AI_NOMOVE| AI_NOFIGHT| AI_NPC
   viAttributes = MOB_NOFIGHT | MOB_LISTEN | MOB_RANDOM | MOB_RECEIVE | MOB_TEACHER
   viOccupation = MOB_ROLE_SCHOLAR

properties:

   poLich = $
   plKilledBy = $
   ptNoSteal = $

   pbIllusioned = TRUE
   ptGoIllusioned = $

messages:

   Constructor(Attackers=$)
   {
      poLich = create(&Lich);
      plKilledBy=Attackers;
      %% only the killer can pick up things for the first 25 seconds.
      ptNoSteal = CreateTimer(self,@NoStealTimer,25000);
      
      propagate;
   }

   GetIcon()
   {
      if pbIllusioned { return vrIcon; }
      return vrIcon2;
   }

   GetName()
   {
      if pbIllusioned { return vrName; }
      return vrName2;
   }

   GetApparentName()
   {
      if pbIllusioned { return vrName; }
      return vrName2;
   }
   
   ShowDesc()
   {
      if pbIllusioned {
         AddPacket(4,vrDesc);
         return;
      }
      AddPacket(4,vrDesc2);
      return;
   }

   DispelIllusionEnchantments()
   {
   if not pbIllusioned
   { return; }

   Post(poOwner,@SomeoneSaid,#what=self,#string=deadlich_dispel, #type=SAY_MESSAGE);

   pbIllusioned = FALSE;
   send(poOwner,@Somethingchanged,#what=self);
   if ptGoIllusioned <> $
   {
      deleteTimer(ptGoIllusioned);
      ptGoIllusioned = $;
   }
   ptGoIllusioned=createtimer(self,@ReplaceIllusions,LICH_ILLUSION_TIME);

   return;
   }

   ReplaceIllusions()
   {
   ptGoIllusioned = $;

   if pbIllusioned
   { return; }

   Post(poOwner,@SomeoneSaid,#what=self,#string=lich_respel, #type=SAY_MESSAGE);

   pbIllusioned = TRUE;
   send(poOwner,@Somethingchanged,#what=self);
   return;
   }


   NoStealTimer()
   {
      ptNoSteal = $;
      return;
   }

   CanGetMe(what=$)
   {
      if ptNoSteal = $
      {
         return TRUE;
      }
      
      if plKilledBy <> $ AND FindListElem(plKilledBy,what) <> 0
      {
         return TRUE;
      }
      
      return FALSE;
   }

   SetForSale()
   {
	plFor_sale = [$,$,
	      [],
%        [ SID_EVIL_TWIN, SID_SUMMON_POISON_FOG, SID_BLOOD_INHERITANCE ],
       $ ]; 
     return;
   }
 
EstablishNecromancerGuild(master=$)
{
   if master = $ { return; }
   if send(master,@GetGuild) <> $ { DEBUG("Tried to establish necroguild with master already guilded."); return; }
   send(poOwner,@NewHold,#what=poLich,#new_row=piRow,#new_col=piCol,#fine_row=piFine_Row,#fine_col=piFine_Col);
   send(poLich,@EstablishNecromancerGuild,#master=master);
   send(self,@Delete,#lichswapout=TRUE);
   return;
}

Delete(lichswapout = FALSE)
{
   local iQNTindex, oQE, oQ;
   oQE = send(SYS,@GetQuestEngine);
   send( oQE, @SetQuestScheduleChance, #index = QST_ID_ESTABLISH_NECROGUILD, #new_pct = 0 );
   if lichswapout {
      % Don't need to send this, quest cleans itself up. This may have been
      % different ~16 years ago.   
      %for oQ in nth(send( oQE, @GetQuestTemplate, #index = QST_ID_ESTABLISH_NECROGUILD ),QT_ACTIVE_QUESTS)
      %{
      %   send(oQ,@DeadlineExpired);
      %}
      
      iQNTindex = first(nth(send( oQE, @GetQuestTemplate, #index = QST_ID_ESTABLISH_NECROGUILD ),QT_QUEST_NODES));
      send( oQE, @SetQuestNodeNPCList, #index = iQNTindex, #new_NPC_list = [poLich] );
   }
   else {
      if (poLich <> $) {
         send(poLich,@Delete);
         poLich=$;
      }
   }
   if ptNoSteal <> $
   {
      deleteTimer(ptNoSteal);
      ptNoSteal=$;
   }
   if ptGoIllusioned <> $
   {
      deleteTimer(ptGoIllusioned);
      ptGoIllusioned = $;
   }

   propagate;
}

   GetNumAmulets()
   {
      if poLich = $
      {
         Debug("Dead lich points to no lich!");

         return FALSE;
      }

      return Send(poLich,@GetNumAmulets);
   }

CanMorphTo()
{
   return FALSE;
}

DMCanArmageddon()
{
   return FALSE;
}
   
   NewOwner(what=$)
   {
      % This should never happen, but if it does...
      if (what <> $) and not isClass(what,&GuildHall15)
      {
         DEBUG("Bad Dead Lich!  Go to your room!");
         post(self,@GoBackToGuildhall);
      }
      
      propagate;
   }

   GoBackToGuildhall()
   {
      local oGuildh15;

      oGuildh15 = Send(SYS,@FindRoomByNum,#num=RID_GUILDH15);

      Send(oGuildh15,@NewHold,#what=self,
            #new_row=13,#new_col=49,#fine_row=16,#fine_col=00,#new_angle=ANGLE_WEST);
      if Send(oGuildh15,@CountHoldingHowMany,#class=&DeadLich) > 1
      {
         Debug("More than one dead lich in the guild hall!!");
      }

      if Send(oGuildh15,@CountHoldingHowMany,#class=&DeadLich) > 0
         AND Send(oGuildh15,@CountHoldingHowMany,#class=&Lich) > 0
      {
         Debug("Both a lich and a dead lich in the guild hall!!");
      }

      return;
   }
 
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

